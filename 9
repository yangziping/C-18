#include<stdio.h>
#include<stdlib.h>
#define  N 13
struct tree {
           float num;
           struct tree *Lnode;
           struct tree *Rnode;
           }* fp[N];
 char s[2*N];
void inite_node(float f[],int n){
 
                int i;
                struct tree *pt;
                for(i=0;i<n;i++)
                {
                                pt=(struct tree *)malloc(sizeof(struct tree));
                                pt->num=f[i];
                                pt->Lnode=NULL;
                                pt->Rnode=NULL;
                                fp[i]=pt;
                                }
                                }
void sort(struct tree * array[],int n)
{
      int i;
      struct tree *temp;
      for(i=N-n;i<N-1;i++)
      if(array[i]->num>array[i+1]->num)
      {
                     temp=array[i+1];
                      array[i+1]=array[i];
                       array[i]=temp;
                      }
   }
 struct tree * construct_tree(float f[],int n)
{
           int i;
           struct tree *pt;
           for(i=1;i<N;i++)
           {
                           pt=(struct tree *)malloc(sizeof(struct tree));
                           pt->num=fp[i-1]->num+fp[i]->num;
                           pt->Lnode=fp[i-1];pt->Rnode=fp[i];
                           fp[i]=pt;
                           sort(fp,N-i);
                           }
                           return fp[N-1];
                           
                           }
    void preorder(struct tree *p,int k,char c)
    {
         int j;
         if(p!=NULL)
         {
                    if(c=='1') s[k]='0';
                    else s[k]='1';
                    if(p->Lnode==NULL){
                    printf("%.2f: ",p->num);
                    for(j=0;j<=k;j++)
                    printf("%c",s[j]);
                    putchar('\n');
                    }
                    preorder(p->Lnode,k+1,'1');
                    preorder(p->Rnode,k+1,'r');
                    }}
                     
int main()
{
     float f[N]={2,3,5,7,11,13,17,19,23,29,31,37,41};
     struct tree *head;
     inite_node(f,N);
     head=construct_tree(f,N);
     s[0]=0;
     preorder(head,0,'1');
     system("pause");
     return 0;
}
                    
